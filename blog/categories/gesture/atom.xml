<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: gesture | Kent's Blog]]></title>
  <link href="http://blog.kent-chiu.com/blog/categories/gesture/atom.xml" rel="self"/>
  <link href="http://blog.kent-chiu.com/"/>
  <updated>2014-05-23T10:21:45+08:00</updated>
  <id>http://blog.kent-chiu.com/</id>
  <author>
    <name><![CDATA[Kent]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Android Gesture]]></title>
    <link href="http://blog.kent-chiu.com/blog/2012/03/20/gesture/"/>
    <updated>2012-03-20T00:00:00+08:00</updated>
    <id>http://blog.kent-chiu.com/blog/2012/03/20/gesture</id>
    <content type="html"><![CDATA[<p>Android
Gesture是用來偵測、處理手勢的相關動作，像是手指頭在螢幕畫出圖案，大部份的應用是拿來偵測上下或左右滑過螢幕(swipe)，
如果不需要處理特別的手勢，那通常用<a href="http://wiki.kent-chiu.com/doku.php?id=android:gesture" title="android:gesture">GestureDetector</a>相關的類別即可。</p>

<p>幾個主要的類別是：</p>

<ol>
<li>android.view.GestureDetector 偵測手勢</li>
<li>android.view.GestureDetector.OnGestureListener 處理Gesture事件</li>
<li>android.view.GestureDetector.OnDoubleTapListener
處理double-tap(雙擊)事件</li>
<li>android.view.GestureDetector.SimpleOnGestureListener
一個基本的Gesture
Listener實作，直接extneds這個類別可以不用實作一堆OnGestureListener,OnDoubleTapListener用不著的methods</li>
<li>android.view.View.OnTouchListener
用來把View上所發生的事件傳給GestureDetector</li>
</ol>


<p>處理多點觸控的相關類別是：</p>

<ol>
<li>android.view.ScaleGestureDetector</li>
<li>android.view.OnScaleGestureListener</li>
<li>android.view.SimpleOnScaleGestureListener</li>
</ol>


<p>```
public class MyActivity extends Activity {
 </p>

<pre><code>private GestureDetector    detector;
private WebView myWebView;
</code></pre>

<p> </p>

<pre><code>@Override
public void onCreate(Bundle savedInstanceState) {
    detector = new GestureDetector(new MyOnGestureListener());
    myWebView.setOnTouchListener(new MyOnTouchListener());
}    
</code></pre>

<p> 
 </p>

<pre><code>class MyOnGestureListener implements OnGestureListener {
</code></pre>

<p> </p>

<pre><code>    @Override
    public boolean onDown(MotionEvent e) {
        return false;
    }
</code></pre>

<p> </p>

<pre><code>    @Override
    public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {
        if (e1.getX() - e2.getX() &gt; 200) { //swipe left，如果向左滑動的距離超過200才執行
        } else if (e2.getX() - e1.getX() &gt; 200) { // 如果向向滑動的距離超過200才執行
        }
        return true;
    }
</code></pre>

<p> </p>

<pre><code>    @Override
    public void onLongPress(MotionEvent e) {
    }
</code></pre>

<p> </p>

<pre><code>    @Override
    public boolean onScroll(MotionEvent e1, MotionEvent e2, float distanceX, float distanceY) {
        return false;
    }
</code></pre>

<p> </p>

<pre><code>    @Override
    public void onShowPress(MotionEvent e) {
</code></pre>

<p> </p>

<pre><code>    }
</code></pre>

<p> </p>

<pre><code>    @Override
    public boolean onSingleTapUp(MotionEvent e) {
        return false;
    }
}
</code></pre>

<p> 
 </p>

<pre><code>class MyOnTouchListener implements OnTouchListener {
    @Override
    public boolean onTouch(View v, MotionEvent event) {
        return detector.onTouchEvent(event);
    }
}
</code></pre>

<p>}
```</p>

<p>使用上比較需要注意的是OnTouchListener，這個要設定到你操作的元件上，本例中，Activity上面是整個被WebView(myWebView)佔住了
，所以所有的手勢操作是發生在WebView上而不是Activity，所以必須把WebView的TouchEvent傳給detector</p>

<p>上面的MyOnGestureListener可以用下面的這個MySimpleOnGestureListener取代，可以不用實作一堆空methods</p>

<p>```
class MySimpleOnGestureListener extends SimpleOnGestureListener {
 
 </p>

<pre><code>@Override
public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {
    if (e1.getX() - e2.getX() &gt; 200) { //swipe left，如果向左滑動的距離超過200才執行
    } else if (e2.getX() - e1.getX() &gt; 200) { // 如果向向滑動的距離超過200才執行
    }
    return true;
}
</code></pre>

<p> 
}
```</p>
]]></content>
  </entry>
  
</feed>
