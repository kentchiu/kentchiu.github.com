<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: pgsql | Kent's Blog]]></title>
  <link href="http://blog.kent-chiu.com/blog/categories/pgsql/atom.xml" rel="self"/>
  <link href="http://blog.kent-chiu.com/"/>
  <updated>2013-08-28T10:37:41+08:00</updated>
  <id>http://blog.kent-chiu.com/</id>
  <author>
    <name><![CDATA[Kent]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PostgreSQL 101]]></title>
    <link href="http://blog.kent-chiu.com/blog/2012/05/30/postgresql_101/"/>
    <updated>2012-05-30T00:00:00+08:00</updated>
    <id>http://blog.kent-chiu.com/blog/2012/05/30/postgresql_101</id>
    <content type="html"><![CDATA[<h1>Command Line</h1>

<p>用使用者帳號<code>username</code>登入指定的databalse</p>

<pre><code>$ psql -U username -W -d database

Welcome to psql 8.3.21, the PostgreSQL interactive terminal.

Type:  \copyright for distribution terms
       \h for help with SQL commands
       \? for help with psql commands
       \g or terminate with semicolon to execute query
       \q to quit
</code></pre>

<ul>
<li><code>\q</code> 離開psql指令模式</li>
<li><code>\h</code> SQL 指令的 help</li>
<li><code>\?</code> psql 指令的 help</li>
</ul>


<p>進入後，提示符號會變成<code>資料庫名稱 + -#</code> ,ex : <code>mydb-#</code>，後面的提示符如果是在 <code>mydb-#</code> 表示已進入 psql command mode環境</p>

<pre><code>mydb-# \?

General
  # 重新連線到特定的db (目前在"mydb")    
  \c[onnect] [DBNAME|- USER|- HOST|- PORT|-]
                 connect to new database (currently "mydb")
  \cd [DIR]      change the current working directory
  \copyright     show PostgreSQL usage and distribution terms
  \encoding [ENCODING]
                 show or set client encoding
  \h [NAME]      help on syntax of SQL commands, * for all commands
  \prompt [TEXT] NAME
                 prompt user to set internal variable
  \password [USERNAME]
                 securely change the password for a user
  \q             quit psql
  \set [NAME [VALUE]]
                 set internal variable, or list all if no parameters
  \timing        toggle timing of commands (currently off)
  \unset NAME    unset (delete) internal variable
  \! [COMMAND]   execute command in shell or start interactive shell

Query Buffer
  \e [FILE]      edit the query buffer (or file) with external editor
  \g [FILE]      send query buffer to server (and results to file or |pipe)
  \p             show the contents of the query buffer
  \r             reset (clear) the query buffer
  \w FILE        write query buffer to file

Input/Output
  \echo [STRING] write string to standard output
  \i FILE        execute commands from file
  \o [FILE]      send all query results to file or |pipe
  \qecho [STRING]
                 write string to query output stream (see \o)

Informational
  # 顯示schema
  \d [NAME]      describe table, index, sequence, or view
  # \dt 列出目前db所有的tables
  # \di 列出目前db所有的indexs
  # \ds 列出目前db所有的sequences
  # \dv 列出目前db所有的views
  # \dS 列出目前db所有的system tables
  \d{t|i|s|v|S} [PATTERN] (add "+" for more detail)
                 list tables/indexes/sequences/views/system tables
  \da [PATTERN]  list aggregate functions
  \db [PATTERN]  list tablespaces (add "+" for more detail)
  \dc [PATTERN]  list conversions
  \dC            list casts
  \dd [PATTERN]  show comment for object
  \dD [PATTERN]  list domains
  \df [PATTERN]  list functions (add "+" for more detail)
  \dF [PATTERN]  list text search configurations (add "+" for more detail)
  \dFd [PATTERN] list text search dictionaries (add "+" for more detail)
  \dFt [PATTERN] list text search templates
  \dFp [PATTERN] list text search parsers (add "+" for more detail)
  \dg [PATTERN]  list groups
  \dn [PATTERN]  list schemas (add "+" for more detail)
  \do [NAME]     list operators
  \dl            list large objects, same as \lo_list
  \dp [PATTERN]  list table, view, and sequence access privileges
  \dT [PATTERN]  list data types (add "+" for more detail)
  \du [PATTERN]  list users
  \l             list all databases (add "+" for more detail)
  \z [PATTERN]   list table, view, and sequence access privileges (same as \dp)

Formatting
  \a             toggle between unaligned and aligned output mode
  \C [STRING]    set table title, or unset if none
  \f [STRING]    show or set field separator for unaligned query output
  \H             toggle HTML output mode (currently off)
  \pset NAME [VALUE]
                 set table output option
                 (NAME := {format|border|expanded|fieldsep|footer|null|
                 numericlocale|recordsep|tuples_only|title|tableattr|pager})
  \t             show only rows (currently off)
  \T [STRING]    set HTML &lt;table&gt; tag attributes, or unset if none
  \x             toggle expanded output (currently off)

Copy, Large Object
  \copy ...      perform SQL COPY with data stream to the client host
  \lo_export LOBOID FILE
  \lo_import FILE [COMMENT]
  \lo_list
  \lo_unlink LOBOID    large object operations  
</code></pre>

<h4>列出目前所在的database的所有 tables</h4>

<p> \d{t|i|s|v|S} [PATTERN] (add "+" for more detail)</p>

<ul>
<li>\dt 列出目前db所有的tables</li>
<li>\di 列出目前db所有的indexs</li>
<li>\ds 列出目前db所有的sequences</li>
<li>\dv 列出目前db所有的views</li>
<li>\dS 列出目前db所有的system tables</li>
</ul>


<p>ex:</p>

<pre><code>mydb-# \dt

           List of relations
 Schema |     Name      | Type  | Owner
--------+---------------+-------+-------
 public | auth          | table | admin
 public | match_history | table | admin
 public | usr           | table | admin
(3 rows)
</code></pre>

<h4>顯示某個table，view，index的schema</h4>

<p> \d [NAME]      describe table, index, sequence, or view</p>

<p>ex:</p>

<pre><code>mydb-# \d auth
                                      Table "public.auth"
   Column    |            Type             |                     Modifiers
-------------+-----------------------------+---------------------------------------------------
 id          | integer                     | not null default nextval('auth_id_seq'::regclass)
 create_date | timestamp without time zone |
 enabled     | boolean                     | not null
 expire_date | timestamp without time zone |
 feature_id  | integer                     |
 hwid        | character varying(255)      |
 match_date  | timestamp without time zone |
 matchable   | boolean                     | not null
 max_device  | integer                     |
 printed     | boolean                     | not null
 sn          | character varying(255)      | not null
 trial       | boolean                     | not null
 agent_id    | integer                     |
 user_id     | integer                     |
 version     | character varying(20)       | not null default 1
 edition     | character varying(255)      |
Indexes:
    "auth_pkey" PRIMARY KEY, btree (id)
    "auth_sn_key" UNIQUE, btree (sn)    
</code></pre>

<h1>Sequence (AUTO INCREMENT)</h1>

<p>PostgreSQL並沒有自增型欄位型態^<a href="#fn__1">1)</a><sup>AUTO
INCREMENT</sup>，但是有提供Sequence機制，這部份，與<a href="http://wiki.kent-chiu.com/doku.php?id=database:oracle_101#auto_increment" title="database:oracle_101">oracle</a>比較類似，但PostgreSQL可以透過建立table時的自訂語法來自動套用Sequence，讓其動作比較接近<strong>AUTO
INCREMENT</strong>的效果</p>

<h3>使用方式</h3>

<h5>讓table的某一column套用sequence</h5>

<p>```
CREATE TABLE tablename (</p>

<pre><code>colname SERIAL
</code></pre>

<p>);
```</p>

<p>上面的語法等效於</p>

<p>```
CREATE SEQUENCE tablename_colname_seq;
CREATE TABLE tablename (</p>

<pre><code>colname integer DEFAULT NEXTVAL('tablename_colname_seq') NOT NULL
</code></pre>

<p>);
```</p>

<h5>建立sequence</h5>

<p><code>
create sequence seq start 100;
</code></p>

<p>以上語法會建立一個名為<code>seq</code>的sequence，啟始值為100 (從100起跳)</p>

<h5>取得目前sequence的值</h5>

<p><code>
select currval('seq');
</code></p>

<h5>取得下一個sequence的值</h5>

<p><code>
select nextval('seq');
</code></p>

<h5>重新設定sequence值</h5>

<p><code>
select setval('seq',9)
</code></p>

<h5>重新設定sequence值(建議)</h5>

<p><code>
select setval('seq', max(id)) FROM myTable;
</code></p>

<h3>Drop all tables script</h3>

<p>```
/<em> create a function for drop all tables </em>/
CREATE OR REPLACE FUNCTION drop_all_table() RETURNS SETOF RECORD   AS $$
DECLARE
  stmt RECORD;
BEGIN</p>

<pre><code>FOR stmt IN
    /* select table */
   SELECT c.relname FROM pg_catalog.pg_class AS c LEFT JOIN
pg_catalog.pg_namespace AS n ON n.oid = c.relnamespace WHERE relkind =
'r' AND n.nspname NOT IN ('pg_catalog', 'pg_toast') AND
pg_catalog.pg_table_is_visible(c.oid)
 LOOP
    /* drop table one by one */
    EXECUTE 'drop table ' || quote_ident(stmt.relname) || ';';
END LOOP;
</code></pre>

<p>END;
$$ LANGUAGE plpgsql STRICT;
 
begin;
/<em> execute the function </em>/
SELECT drop_all_table();
commit;
```</p>

<h3>Truncate all tables script</h3>

<p>```
/<em> create a function for drop all tables </em>/
CREATE OR REPLACE FUNCTION truncate_all_table() RETURNS SETOF RECORD   AS $$
DECLARE
  stmt RECORD;
BEGIN</p>

<pre><code>FOR stmt IN
    /* select table */
   SELECT c.relname FROM pg_catalog.pg_class AS c LEFT JOIN
pg_catalog.pg_namespace AS n ON n.oid = c.relnamespace WHERE relkind =
'r' AND n.nspname NOT IN ('pg_catalog', 'pg_toast') AND
pg_catalog.pg_table_is_visible(c.oid)
 LOOP
    /* truncate table one by one */
    EXECUTE 'truncate table ' || quote_ident(stmt.relname) || ';';
END LOOP;
</code></pre>

<p>END;
$$ LANGUAGE plpgsql STRICT;
 
begin;
/<em> execute the function </em>/
SELECT  truncate_all_table();
commit;
```</p>

<p>如果遇到建立script時<code>language “plpgsql” does not exist</code>(通常在linux下才會),可透過createlang命令，安裝plpgsql到指定的db</p>

<p><code>
createlang -d &lt;dbname&gt; plpgsql
</code></p>

<h1>建立全新的Database</h1>

<p>從完全沒有db開始建立的流程如下</p>

<ul>
<li>pgsql/bin/initdb.exe -D <em>path</em></li>
<li><em>path</em>pg_hba.conf
設定local可以不用密碼登入(暫時性的，等設定完成記得改回來)</li>
<li>用os的帳號登入新的db
(通常是administrator)，因為上面已設定不用密碼了，所以只要os的帳號即可登入</li>
<li>登入後再建立新的database跟user</li>
<li>把<em>path</em>pg_hba.conf改回需認證才能登入</li>
</ul>


<h1>管理</h1>

<h5>列出目前活動</h5>

<p>```
select * from pg_stat_activity ;</p>

<p> datid | datname | procpid | usesysid | usename | current_query
-------+---------+---------+----------+---------+---------------
 16976 | simpydb |   31008 |      100 | otis    |
 16976 | simpydb |   26126 |      100 | otis    |
(2 rows)
```</p>

<h1>Resource</h1>

<ul>
<li><a href="http://www.postgresql.org/docs/8.1/static/sql-createsequence.html" title="http://www.postgresql.org/docs/8.1/static/sql-createsequence.html">CREATE
SEQUENCE</a></li>
<li><a href="http://www.postgresql.org/docs/8.1/static/functions-sequence.html" title="http://www.postgresql.org/docs/8.1/static/functions-sequence.html">Sequence Manipulation
Functions</a></li>
<li><a href="http://www.postgresql.org/docs/8.0/interactive/datatype.html#DATATYPE-SERIAL" title="http://www.postgresql.org/docs/8.0/interactive/datatype.html#DATATYPE-SERIAL">PostgreSQL serial data
type</a></li>
<li><a href="http://wiki.kent-chiu.com/doku.php?id=database:oracle_101" title="database:oracle_101">Oracle
101</a></li>
<li><a href="http://www.postgresql.org/docs/9.1/static/errcodes-appendix.html">postgresql error code</a></li>
</ul>


<p>^<a href="#fnt__1">1)</a>^ 每次insert時會自動讓某一特定欄位+1</p>
]]></content>
  </entry>
  
</feed>
