<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: junit | Kent's Blog]]></title>
  <link href="http://blog.kent-chiu.com/blog/categories/junit/atom.xml" rel="self"/>
  <link href="http://blog.kent-chiu.com/"/>
  <updated>2013-07-23T12:20:08+08:00</updated>
  <id>http://blog.kent-chiu.com/</id>
  <author>
    <name><![CDATA[Kent]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Test Exception In JUnit]]></title>
    <link href="http://blog.kent-chiu.com/blog/2012/03/20/test_exception_in_junit/"/>
    <updated>2012-03-20T00:00:00+08:00</updated>
    <id>http://blog.kent-chiu.com/blog/2012/03/20/test_exception_in_junit</id>
    <content type="html"><![CDATA[<p>之前遇到測exception message都還改回用try catch，原來，可以用mock
like的方式去測exception message.</p>

<p>```
@Rule
public ExpectedException thrown = ExpectedException.none();
 
@Test
public void shouldNotLetUnknownUserLogin() throws UnknownUserException {</p>

<pre><code>thrown.expect(UnknownUserException.class);
thrown.expectMessage("Unknown user: joe");
UserDao dao = mock(UserDao.class);
when(dao.findByName("joe")).thenReturn(null);
manager.setUserDao(dao);
manager.login("joe","secret");
</code></pre>

<p>}
```</p>

<p><code>
thrown.expectMessage(JUnitMatchers.containsString("joe"));
</code></p>

<p>code snippet is from
<a href="http://weblogs.java.net/blog/johnsmart/archive/2009/09/27/testing-exceptions-junit-47" title="http://weblogs.java.net/blog/johnsmart/archive/2009/09/27/testing-exceptions-junit-47">here</a></p>
]]></content>
  </entry>
  
</feed>
