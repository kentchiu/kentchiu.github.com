<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: jsp | Kent's Blog]]></title>
  <link href="http://blog.kent-chiu.com/blog/categories/jsp/atom.xml" rel="self"/>
  <link href="http://blog.kent-chiu.com/"/>
  <updated>2014-09-18T16:50:57+08:00</updated>
  <id>http://blog.kent-chiu.com/</id>
  <author>
    <name><![CDATA[Kent]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Testing JSP in Jetty Server (Embedded Mode)]]></title>
    <link href="http://blog.kent-chiu.com/blog/2012/03/20/testing_jsp_in_jetty/"/>
    <updated>2012-03-20T00:00:00+08:00</updated>
    <id>http://blog.kent-chiu.com/blog/2012/03/20/testing_jsp_in_jetty</id>
    <content type="html"><![CDATA[<p>```
package com.bellwin.idcview.login.page;
 
import static org.junit.Assert.assertTrue;
 
import org.eclipse.jetty.server.Connector;
import org.eclipse.jetty.server.Server;
import org.eclipse.jetty.server.nio.SelectChannelConnector;
import org.eclipse.jetty.webapp.WebAppContext;
import org.junit.Before;
import org.junit.BeforeClass;
 
import com.gargoylesoftware.htmlunit.WebClient;
 
public abstract class AbstractContainerTest {</p>

<pre><code>protected static PauseableServer server;
</code></pre>

<p> </p>

<pre><code>protected static final int port = 9180;
</code></pre>

<p> </p>

<pre><code>protected static final String BASEURI = "http://localhost:" + port + "/";
</code></pre>

<p> </p>

<pre><code>protected final WebClient webClient = new WebClient();
</code></pre>

<p> </p>

<pre><code>@BeforeClass
public static void startContainer() throws Exception {
    if (server == null) {
        server = new PauseableServer();
        Connector connector = new SelectChannelConnector();
        connector.setPort(port);
        server.setConnectors(new Connector[]{connector});
        server.setHandler(new WebAppContext("src/main/webapp", "/"));
        server.start();
        assertTrue(server.isStarted());
    }
}
</code></pre>

<p> </p>

<pre><code>@Before
public void beforeTest() {
    webClient.setThrowExceptionOnFailingStatusCode(true);
}
</code></pre>

<p> </p>

<pre><code>public void pauseServer(boolean paused) {
    if (server != null) {
        server.pause(paused);
    }
}
</code></pre>

<p> </p>

<pre><code>public static class PauseableServer extends Server {
    public synchronized void pause(boolean paused) {
        try {
            if (paused) {
                for (Connector connector : getConnectors()) {
                    connector.stop();
                }
            } else {
                for (Connector connector : getConnectors()) {
                    connector.start();
                }
            }
        } catch (Exception e) {
        }
    }
}
</code></pre>

<p>}
```</p>

<p>```
package com.bellwin.idcview.login.page;
 
import java.io.IOException;
import java.net.MalformedURLException;
 
import org.junit.Before;
import org.junit.Test;
 
import com.gargoylesoftware.htmlunit.ElementNotFoundException;
import com.gargoylesoftware.htmlunit.FailingHttpStatusCodeException;
import com.gargoylesoftware.htmlunit.WebAssert;
import com.gargoylesoftware.htmlunit.html.HtmlCheckBoxInput;
import com.gargoylesoftware.htmlunit.html.HtmlForm;
import com.gargoylesoftware.htmlunit.html.HtmlInput;
import com.gargoylesoftware.htmlunit.html.HtmlPage;
 
public class ContainerIntegrationTest extends AbstractContainerTest {
 </p>

<pre><code>@Before
public void logOut() throws IOException {
    // Make sure we are logged out
    final HtmlPage homePage = webClient.getPage(BASEURI);
    try {
        homePage.getAnchorByHref("/logout.jsp").click();
    }
    catch (ElementNotFoundException e) {
        //Ignore
    }
}
</code></pre>

<p> </p>

<pre><code>@Test
public void logIn() throws FailingHttpStatusCodeException, MalformedURLException, IOException, InterruptedException {
    HtmlPage page = webClient.getPage(BASEURI + "login.jsp");
    HtmlForm form = page.getFormByName("loginform");
    form.&lt;HtmlInput&gt;getInputByName("username").setValueAttribute("root");
    form.&lt;HtmlInput&gt;getInputByName("password").setValueAttribute("secret");
    page = form.&lt;HtmlInput&gt;getInputByName("submit").click();
    // This'll throw an expection if not logged in
    page.getAnchorByHref("/logout.jsp");
}
</code></pre>

<p> </p>

<pre><code>@Test
public void logInAndRememberMe() throws Exception {
    HtmlPage page = webClient.getPage(BASEURI + "login.jsp");
    HtmlForm form = page.getFormByName("loginform");
    form.&lt;HtmlInput&gt;getInputByName("username").setValueAttribute("root");
    form.&lt;HtmlInput&gt;getInputByName("password").setValueAttribute("secret");
    HtmlCheckBoxInput checkbox = form.getInputByName("rememberMe");
    checkbox.setChecked(true);
    page = form.&lt;HtmlInput&gt;getInputByName("submit").click();
    server.stop();
    server.start();
    page = webClient.getPage(BASEURI);
    // page.getAnchorByHref("/logout.jsp");
    WebAssert.assertLinkPresentWithText(page, "Log out");
    page = page.getAnchorByHref("/account").click();
    // login page should be shown again - user remembered but not authenticated
    WebAssert.assertFormPresent(page, "loginform");
}
</code></pre>

<p> 
}
```</p>

<p>You may want to logging message during Server starting.</p>

<p>```
<logger name="org.eclipse.jetty.util.log" additivity="false"></p>

<pre><code>&lt;level value="debug" /&gt;
&lt;appender-ref ref="stdout" /&gt;
</code></pre>

<p></logger>
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Servlet And JSP encoding setting]]></title>
    <link href="http://blog.kent-chiu.com/blog/2012/03/20/servlet_and_jsp_page_encoding_setting/"/>
    <updated>2012-03-20T00:00:00+08:00</updated>
    <id>http://blog.kent-chiu.com/blog/2012/03/20/servlet_and_jsp_page_encoding_setting</id>
    <content type="html"><![CDATA[<p>Setting encoding filter and JSP page encoding in web.xml could fix
encoding issue.</p>

<p>servlet filter.</p>

<p>JSP page encoding. Without this, you need put
<code>&lt;%@ page language=“java” contentType=“text/html; charset=UTF-8” pageEncoding=“UTF-8”%&gt;</code>
in every JSP pages.</p>

<p>```</p>

<pre><code>&lt;jsp-config&gt;
    &lt;jsp-property-group&gt;
        &lt;url-pattern&gt;*.jsp&lt;/url-pattern&gt;
        &lt;page-encoding&gt;UTF-8&lt;/page-encoding&gt;
    &lt;/jsp-property-group&gt;
&lt;/jsp-config&gt;
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
</feed>
