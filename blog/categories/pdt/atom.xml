<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: pdt | Kent's Blog]]></title>
  <link href="http://blog.kent-chiu.com/blog/categories/pdt/atom.xml" rel="self"/>
  <link href="http://blog.kent-chiu.com/"/>
  <updated>2014-06-27T00:01:08+08:00</updated>
  <id>http://blog.kent-chiu.com/</id>
  <author>
    <name><![CDATA[Kent]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Show Log In Eclipse Console]]></title>
    <link href="http://blog.kent-chiu.com/blog/2011/10/17/show_log_in_eclipse_console/"/>
    <updated>2011-10-17T00:00:00+08:00</updated>
    <id>http://blog.kent-chiu.com/blog/2011/10/17/show_log_in_eclipse_console</id>
    <content type="html"><![CDATA[<p>Using eclipse <strong>External Tools configuration</strong> to run a tail program to
keep monitor log files.</p>

<p><img src="http://blog.kent-chiu.com/images/2011-10-17/show_log_in_eclipse_console_01.png" alt="show_log_in_eclipse_console_01.png" /></p>

<p>Please ensure you have should tail program</p>

<ul>
<li>Location: point to your tail program</li>
<li>Working Directory: Using <strong>Browse Workspace</strong> to select your project
node.</li>
<li>Arguments: -f &lt;log file name></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to setup PDT]]></title>
    <link href="http://blog.kent-chiu.com/blog/2011/10/17/setup_eclipse_pdt/"/>
    <updated>2011-10-17T00:00:00+08:00</updated>
    <id>http://blog.kent-chiu.com/blog/2011/10/17/setup_eclipse_pdt</id>
    <content type="html"><![CDATA[<p>PDT is Eclipse <strong>P</strong>HP <strong>D</strong>evelopment <strong>T</strong>ools, this article is a
instuction about how to setup PDT with other useful tools, like:</p>

<ol>
<li>zend debugger</li>
<li>remote server</li>
</ol>


<p>Option:</p>

<ol>
<li>SVN plugins</li>
<li>open extern plugins (open contain folder or shell) ()</li>
<li>QuickREx (Regular Expression tools)</li>
</ol>


<h1>Install PDT by pulse</h1>

<ol>
<li>download
<a href="http://www.poweredbypulse.com/" title="http://www.poweredbypulse.com/">pulse</a></li>
<li>registry a account if necessary</li>
<li>install Eclipse 3.x For PHP in pulse menu</li>
</ol>


<h1>Install Plugins (Optional)</h1>

<p>searching Subversive, open extern and QucikREx as keyword in pules
Browser Categories node then install.</p>

<h1>Install Debugger</h1>

<p>there are two debugger supports by PDT now</p>

<ol>
<li>zend debugger</li>
<li>XDebug</li>
</ol>


<p>both two can used as Script Debugger or Server Debugger of PDT debug
functions.</p>

<h2>zend debugger install</h2>

<p>Assumption: PHP install at C:\xampp\php</p>

<h3>downloading</h3>

<p>Download zend debugger extention from
<a href="http://downloads.zend.com/pdt/server-debugger" title="http://downloads.zend.com/pdt/server-debugger">here</a>,
we use
<a href="http://downloads.zend.com/pdt/server-debugger/ZendDebugger-5.2.15-cygwin_nt-i386.zip" title="http://downloads.zend.com/pdt/server-debugger/ZendDebugger-5.2.15-cygwin_nt-i386.zip">ZendDebugger-5.2.15-cygwin_nt-i386.zip</a>
in this case(maybe you can find the new version then this).</p>

<h3>copy dll to php ext folder</h3>

<p>copy ZendDebugger.dll to C:\xampp\php\ext folder it maybe not as same
as your path, you need found out somewhere you installed the php.</p>

<h3>put dummy.php to your web root</h3>

<p>saving follow code as dummy.php and put it to web root(e.g
c:\xampp\htdocs\dummy.php)</p>

<p>```</p>

<pre><code>&lt;?php
@ini_set('zend_monitor.enable', 0);
if(@function_exists('output_cache_disable')) {
    @output_cache_disable();
}
if(isset($_GET['debugger_connect']) &amp;&amp; $_GET['debugger_connect'] == 1) {
    if(function_exists('debugger_connect'))  {
        debugger_connect();
        exit();
    } else {
        echo "No connector is installed.";
    }
}
?&gt;
</code></pre>

<p>```</p>

<h3>setup php.ini</h3>

<p>put this section to your php.ini.</p>

<p>```</p>

<pre><code>; this is to see output while debugging
implicit_flush = On 
 
; this is to see output while debugging
output_buffering = 0
 
[Zend]
zend_extension_ts="C:\xampp\php\ext\ZendDebugger.dll"
zend_debugger.allow_hosts=127.0.0.1/32
zend_debugger.expose_remotely=always
</code></pre>

<p>```</p>

<h2>XDebug install</h2>

<h3>downloading</h3>

<p>Download zend debugger extention from
[<a href="http://www.xdebug.org/download.php" title="http://www.xdebug.org/download.php">http://www.xdebug.org/download.php</a>|here]].</p>

<h3>copy dll to php ext folder</h3>

<p>copy php_xdebug_xxx.dll to C:\xampp\php\ext folder it maybe not as
same as your path, you need found out somewhere you installed the php.</p>

<h3>setup php.ini</h3>

<p>put this section to your php.ini.</p>

<p>```</p>

<pre><code>[XDebug]
;; Only Zend OR (!) XDebug
zend_extension_ts="C:\xampp\php\ext\php_xdebug.dll"
xdebug.remote_enable=true
xdebug.remote_host=127.0.0.1
xdebug.remote_port=9000
xdebug.remote_handler=dbgp
xdebug.profiler_enable=1
xdebug.profiler_output_dir="C:\xampp\tmp"
</code></pre>

<p>```</p>

<h1>PDT setup</h1>

<h2>setup php executable</h2>

<h2>setup php manual</h2>

<p>point to here:
<a href="http://www.php.net/manual/en" title="http://www.php.net/manual/en">http://www.php.net/manual/en</a></p>

<h2>set file association</h2>

<h3>HTML editor</h3>

<p>eclipse menu → window → preference</p>

<ol>
<li>type 'content types' in filter filed</li>
<li>select 'HTML' node</li>
<li>click 'Add…' button to pop-up Add Content Type Association window</li>
<li>input '*.dwt' in Content type field</li>
<li>click 'OK' to close Add Content Type Association window</li>
<li>click preference window</li>
</ol>


<p><img src="http://blog.kent-chiu.com/images/2011-10-17/setup_elcipse_pdt_01.png" alt="setup_elcipse_pdt_01.png" /></p>

<h3>Web Page Editor</h3>

<p>eclipse menu → window → preference</p>

<ol>
<li>type 'File Accociation' in filter filed</li>
<li>Selecte <strong>File Accociation</strong> node</li>
<li>select <strong>Add…</strong> Button to pop-up <strong>Add File Type</strong> window</li>
<li>Typing which file type you want to add (should start with *.)</li>
<li>select <strong>Add…</strong> Button to pop-up
**<img src="http://blog.kent-chiu.com/images/2011-10-17/setup_elcipse_pdt_02.png" alt="setup_elcipse_pdt_02.png" />
<img src="http://blog.kent-chiu.com/images/2011-10-17/setup_elcipse_pdt_03.png" alt="setup_elcipse_pdt_03.png" />

<ul>
<li>select the file type you want to associated to editor. -
select<strong>Add…</strong>Button to pop-up<strong>Editor Selection</strong>window -
click<strong>OK</strong>Button and confirm the file type is showed in**File
Association** List.</li>
</ul>
</li>
</ol>


<p><img src="http://blog.kent-chiu.com/images/2011-10-17/setup_elcipse_pdt_04.png" alt="setup_elcipse_pdt_04.png" /></p>

<p>Web Page Editor introduced in WTP 2.0, it provides design time preview
functionally.</p>

<p><img src="http://www.eclipse.org/webtools/releases/2.0/newandnoteworthy/j2ee/jsf-web-page-editor.png" alt="" /></p>

<h3>Internet Web Browser</h3>

<p>Internet Web Browser can used to preview HTML render with in Eclipse
View Site.</p>

<p><img src="http://www.eclipse.org/webtools/initial-contribution/IBM/evalGuides/ServerToolsEval_files/monitorBrowser.gif" alt="" /></p>

<p>We also can set *.dwt, *.lbi, *.htm, *.html file association to
those editors.</p>

<h1>Verifing</h1>

<ul>
<li>create new project, the project location should set to
WWW_DOC_ROOT\projectName</li>
<li>create php file</li>
<li>run with script or server should all works fine.</li>
</ul>


<h1>Resoures</h1>

<ul>
<li><a href="http://http://www.poweredbypulse.com/" title="http://http://www.poweredbypulse.com/">pulse</a>
home</li>
<li>there are some usful information about how to configurated in <a href="http://www.thierryb.net/pdtwiki/index.php?title=Main_Page" title="http://www.thierryb.net/pdtwiki/index.php?title=Main_Page">pdt
wiki</a></li>
<li>the details of how to setup zend debug can be found
<a href="http://www.thierryb.net/pdtwiki/index.php?title=Using_PDT_:_Installation_:_Installing_the_Zend_Debugger" title="http://www.thierryb.net/pdtwiki/index.php?title=Using_PDT_:_Installation_:_Installing_the_Zend_Debugger">here</a></li>
<li>the deatils of how to using script and server debugger of PDT,
please check this
<a href="http://www.thierryb.net/pdtwiki/index.php?title=Using_PDT_:_User_Guide_:_PHP_Source_Level_Debugging" title="http://www.thierryb.net/pdtwiki/index.php?title=Using_PDT_:_User_Guide_:_PHP_Source_Level_Debugging">reference</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Running PHPUnit in Eclipse]]></title>
    <link href="http://blog.kent-chiu.com/blog/2011/10/17/running_phpunit_in_eclipse/"/>
    <updated>2011-10-17T00:00:00+08:00</updated>
    <id>http://blog.kent-chiu.com/blog/2011/10/17/running_phpunit_in_eclipse</id>
    <content type="html"><![CDATA[<p>This article is demonstrate how to run PHPUnit test cases in Eclipse
PDT.</p>

<p>There is no build in support for PHPUnit in PDT 2.0 now (however it
supports by Zend Studio). If we want to run the PHPUnit test cases, we
need some additional works for it.</p>

<p>We can invoked phpunit.bat that includes in PHPUnit package by eclipse
external tools function.</p>

<p>this configuration can be reused in any PHPUnit test case. you don't
need to configuring it in every test cases, as long as you need to
select the test case^<a href="#fn__1">1)</a>^ first then run it. .</p>

<h2>STEPS</h2>

<ol>
<li><a href="#add_phpunit_supports_to_eclipse" title="php:running_phpunit_in_eclipse ↵">add PHPUnit supports to
Eclipse</a></li>
<li><a href="#write_a_simple_test" title="php:running_phpunit_in_eclipse ↵">write a simple
test</a></li>
<li><a href="#run_the_test_case" title="php:running_phpunit_in_eclipse ↵">run the test
case</a></li>
<li><a href="#check_resuls" title="php:running_phpunit_in_eclipse ↵">check resuls</a></li>
</ol>


<h3>add PHPUnit supports to Eclipse</h3>

<p>select eclipse main menu → window → preference</p>

<ol>
<li>select <strong>PHP Include Path</strong> node</li>
<li>select <strong>Libraries</strong> tab</li>
<li>click <strong>Add External Source Folder …</strong></li>
<li>select where your PEAR installed</li>
<li>click <strong>OK</strong> button to close folder selection window.</li>
<li>click <strong>OK</strong> to complete setting.</li>
</ol>


<p><img src="http://blog.kent-chiu.com/images/2011-10-17/running_phpunit_in_eclipse_01.png" alt="running_phpunit_in_eclipse_01.png" /></p>

<h3>write a simple test</h3>

<p>```</p>

<pre><code>  &lt;?php
    require_once 'PHPUnit/Framework.php';
 
    class ArrayTest extends PHPUnit_Framework_TestCase {
        public function testNewArrayIsEmpty() {
            $array = array();
            $this-&gt;assertEquals(0, sizeOf($array));
        }
 
        public function testArrayContainsAnElement() {
            $array[] = "content";
            $this-&gt;assertEquals(1, sizeof($array));
        }
 
    }
 
    ?&gt;
</code></pre>

<p>```</p>

<h3>run the test case as Debug</h3>

<p>copy file content from %PHP_HOME%\phpunit and paste as
phpunit_runner.php^<a href="#fn__2">2)</a>^</p>

<p>```</p>

<pre><code>&lt;?php
if (strpos('C:\Program Files\VertrigoServ\Php\php.exe', '@php_bin') === 0) {
    set_include_path(dirname(__FILE__) . PATH_SEPARATOR . get_include_path());
}
 
require_once 'PHPUnit/Util/Filter.php';
 
PHPUnit_Util_Filter::addFileToFilter(__FILE__, 'PHPUNIT');
 
require 'PHPUnit/TextUI/Command.php';
 
define('PHPUnit_MAIN_METHOD', 'PHPUnit_TextUI_Command::main');
 
PHPUnit_TextUI_Command::main();
?&gt;
</code></pre>

<p>```</p>

<p>setup:</p>

<ol>
<li>selected phpunit_runner.php in PHP project explorer view.</li>
<li>click eclipse main menu → Debug Configurations… to poped-up <strong>Debug
Configurations</strong> window</li>
<li>new a PHP script</li>
<li>type 'phpunit_runner' in Name field.</li>
<li>make sure PHP file field is selected to phpunit_runner.php file</li>
<li>switch to <strong>PHP Script arguments</strong> tab</li>
<li>type project absolute path in Script Arguments field</li>
</ol>


<p><img src="http://blog.kent-chiu.com/images/2011-10-17/running_phpunit_in_eclipse_04.png" alt="running_phpunit_in_eclipse_04.png" /></p>

<p><img src="http://blog.kent-chiu.com/images/2011-10-17/running_phpunit_in_eclipse_05.png" alt="running_phpunit_in_eclipse_05.png" /></p>

<p>debug:</p>

<ol>
<li>mark any breakpoint in test case.</li>
<li>select a test case file (php file) which you want debug.</li>
<li>click drop-list of <strong>Debug</strong> button in toolbar</li>
<li>click <strong>phpunit_runner</strong> which we created before then it will
invoke PHP script Debug.</li>
</ol>


<p><img src="http://blog.kent-chiu.com/images/2011-10-17/running_phpunit_in_eclipse_06.png" alt="running_phpunit_in_eclipse_06.png" /></p>

<p>please make sure you selected the test case file before invoke
phpunit_runner</p>

<h3>run the test case as External Tool</h3>

<ol>
<li>click eclipse main menu → Run → External Tools → External Tools
Configurations… to poped-up <strong>External Tools Configurations</strong> window</li>
<li>select *Main* tab</li>
<li>click <strong>Browse File System…</strong> to fulfill ^<a href="#fn__3">3)</a>^ <strong>Location</strong>
field</li>
<li>click <strong>Browse Workspace…</strong> to fulfill <strong>Working Directory</strong> field.</li>
<li>click <strong>Variables…</strong> to fulfill <strong>Arguments</strong> field.</li>
<li>click <strong>Run</strong> button to run PHPUnit test cases.</li>
</ol>


<p><img src="http://blog.kent-chiu.com/images/2011-10-17/running_phpunit_in_eclipse_02.png" alt="running_phpunit_in_eclipse_02.png" /></p>

<h3>check resuls</h3>

<p>the test results should be showed in <strong>Console</strong> view.</p>

<p><img src="http://blog.kent-chiu.com/images/2011-10-17/running_phpunit_in_eclipse_03.png" alt="running_phpunit_in_eclipse_03.png" /></p>

<p>^<a href="#fnt__1">1)</a>^ any php file</p>

<p>^<a href="#fnt__2">2)</a>^ C:\Program Files\VertrigoServ\Php is my %PHP_HOME%
in case</p>

<p>^<a href="#fnt__3">3)</a>^ phpunit.bat was gernerated after PHPUnit installed</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Class Type Hints]]></title>
    <link href="http://blog.kent-chiu.com/blog/2011/10/17/class_type_hints/"/>
    <updated>2011-10-17T00:00:00+08:00</updated>
    <id>http://blog.kent-chiu.com/blog/2011/10/17/class_type_hints</id>
    <content type="html"><![CDATA[<p>variable type hint by comment was deprecated after PDT 2.1</p>

<p>By using a comment you can assign a variable its exact class value. This
assignment will affect the code assist of this variable accordingly.</p>

<p>```</p>

<pre><code>&lt;?php 
function getClass() { 
return new Test(); 
} 
class Test { 
function printValues($a, $b) { 
echo "Values: $a, $b"; 
} 
} 
$myVar = getClass(); 
/* @var $myVar Test */ 
$myVar-&gt; 
?&gt; 
</code></pre>

<p>```</p>

<p>```</p>

<pre><code>&lt;?php 
Class MyClass {
  /**
   * @var ClassType
   */ 
  protected $_foo;
}
?&gt; 
</code></pre>

<p>```</p>

<p>Place your cursor after '\$myVar→' (on the line above the closing PHP
tag) and press Ctrl+Space to activate Code Assist. Code Assist will open
with the function defined in 'Test' class (printValues(\$a, \$b)).
Double click it to enter it into your code.</p>

<p>Without the comment, Code Assist will not be available for the function.</p>

<p>you can also add this to templates</p>

<p>```</p>

<pre><code>/* @var ${dollar}${variable} ${class} */
</code></pre>

<p>```</p>

<p>```</p>

<pre><code>/**
 * @var ClassType
 */ 
</code></pre>

<p>```</p>

<p>check
<a href="http://www.alexatnet.com/node/179" title="http://www.alexatnet.com/node/179">here</a>
for more information.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Allocate Memory Useage]]></title>
    <link href="http://blog.kent-chiu.com/blog/2011/10/17/allocate_memory_useage/"/>
    <updated>2011-10-17T00:00:00+08:00</updated>
    <id>http://blog.kent-chiu.com/blog/2011/10/17/allocate_memory_useage</id>
    <content type="html"><![CDATA[<h4>Show Head Memory Useage</h4>

<p><img src="http://blog.kent-chiu.com/images/2011-10-17/allocate_memory_useage_01.png" alt="allocate_memory_useage_01.png" /></p>

<h4>Allocate More Memory</h4>

<p>-Xms ???m : minimum memory(mega bytes) -Xmx ???m : Maximum memory(mega
bytes)</p>

<p><img src="http://blog.kent-chiu.com/images/2011-10-17/allocate_memory_useage_02.png" alt="allocate_memory_useage_02.png" /></p>

<p>Restart Eclipse PDT and the memory heap status will showing the minimum
value initailly</p>
]]></content>
  </entry>
  
</feed>
