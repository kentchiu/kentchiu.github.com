<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mysql | Kent's Blog]]></title>
  <link href="http://blog.kent-chiu.com/blog/categories/mysql/atom.xml" rel="self"/>
  <link href="http://blog.kent-chiu.com/"/>
  <updated>2014-01-29T18:10:22+08:00</updated>
  <id>http://blog.kent-chiu.com/</id>
  <author>
    <name><![CDATA[Kent]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Update Or Delete with Subquery reslut]]></title>
    <link href="http://blog.kent-chiu.com/blog/2011/10/17/update_or_delete_from_subquery_result/"/>
    <updated>2011-10-17T00:00:00+08:00</updated>
    <id>http://blog.kent-chiu.com/blog/2011/10/17/update_or_delete_from_subquery_result</id>
    <content type="html"><![CDATA[<p>if you try to delete a table and that table is using in subquery like
this</p>

<p><code>
DELETE FROM table_a WHERE col_a IN (SELECT col_a FROM table_a)
</code></p>

<p>The syntax will cause a error says “You can't specify target table 'm'
for update in FROM clause”, error code is 1093. This is cause by MYSQL
DON'T support update table which also used in subquery.</p>

<p>The solution is using alias like this</p>

<p><code>
DELETE FROM table_a WHERE col_a IN (SELECT col_a FROM (SELECT col_a FROM table_a) AS table_x)
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQL]]></title>
    <link href="http://blog.kent-chiu.com/blog/2011/10/17/mysql/"/>
    <updated>2011-10-17T00:00:00+08:00</updated>
    <id>http://blog.kent-chiu.com/blog/2011/10/17/mysql</id>
    <content type="html"><![CDATA[<ul>
<li><a href="http://wiki.kent-chiu.com/doku.php?id=mysql:mysql_101" title="mysql:mysql_101">MySQL
101</a></li>
<li><a href="http://wiki.kent-chiu.com/doku.php?id=mysql:high_performance_mysql_study_notes" title="mysql:high_performance_mysql_study_notes">High Performance MySQL study
notes</a></li>
<li><a href="http://wiki.kent-chiu.com/doku.php?id=mysql:enabled_slow_queries" title="mysql:enabled_slow_queries">Watching Query
Executing</a></li>
<li><a href="http://net.tutsplus.com/tutorials/other/top-20-mysql-best-practices/" title="http://net.tutsplus.com/tutorials/other/top-20-mysql-best-practices/">MySQL效能優化的方式</a></li>
<li><a href="http://wiki.kent-chiu.com/doku.php?id=mysql:update_or_delete_from_subquery_result" title="mysql:update_or_delete_from_subquery_result">Update Or Delete with Subquery
reslut</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LAMP install on CentOS5]]></title>
    <link href="http://blog.kent-chiu.com/blog/2011/10/17/lamp_install/"/>
    <updated>2011-10-17T00:00:00+08:00</updated>
    <id>http://blog.kent-chiu.com/blog/2011/10/17/lamp_install</id>
    <content type="html"><![CDATA[<h2>OS installation</h2>

<h3>VMWare</h3>

<ul>
<li>掛載iso檔</li>
<li>網路卡設成NAT</li>
<li>記憶體可調小一點300M應該就夠了</li>
<li>不用特別去裝VMTools</li>
</ul>


<h3>CentOS 5</h3>

<ul>
<li>安裝成text mode的server就可(不用gui)</li>
<li>照<a href="http://smartraining.cn/centos/server_installation" title="http://smartraining.cn/centos/server_installation">這篇</a>的方式去裝就好了</li>
<li>網路設定如以改用dhcp</li>
<li>Firewall disabled</li>
</ul>


<h4>新建一個一般usre</h4>

<p><code>
adduser username
passwd username
</code></p>

<h4>網路設定</h4>

<ul>
<li>裝完後，如果網路沒有active，可以到/etc/sysconfig/network-scripts/ifcfg-eth0
修改網路設定</li>
</ul>


<p>指定IP</p>

<p>```</p>

<pre><code>DEVICE=eth0                          #網路卡名稱
BOOTPROTO=static                     #BOOTP協定
BROADCAST=192.168.202.255            #廣播 IP Address
HWADDR=00:15:C5:E5:99:B1             #MAC Address
IPADDR=192.168.202.100               #IP Address
NETMASK=255.255.254.0                #Netmask (遮罩)
NETWORK=192.168.202.0                #網段
ONBOOT=yes                           #開機自動啟動 
</code></pre>

<p>```</p>

<p>DHCP</p>

<p>```</p>

<pre><code>DEVICE=eth0
BOOTPROTO=dhcp
ONBOOT=yes
</code></pre>

<p>```</p>

<p>設定完重新啟動網卡</p>

<p>```</p>

<h1>/etc/rc.d/init.d/network restart</h1>

<p>```</p>

<h4>安裝packages</h4>

<ul>
<li>記得透過<a href="http://smartraining.cn/centos/yum" title="http://smartraining.cn/centos/yum">yum</a>裝以一下以下幾個packages，滿有用的</li>
</ul>


<p><code>
yum -y  install wget bzip2 unzip zip nmap tree lynx
</code></p>

<h2>Server installation</h2>

<p>預設的php是5.1.x的，有點太舊了，可以透過<a href="http://www.52crack.com/blog/?action=show&amp;id=368" title="http://www.52crack.com/blog/?action=show&amp;id=368">這個連結</a>的說明更新到5.2.x</p>

<h3>MySQL 5</h3>

<p>MySQL install</p>

<p><code>
yum -y install mysql-server
</code></p>

<p>set MySQL as daemon</p>

<p><code>
chkconfig mysqld on
</code></p>

<p>check config</p>

<p>```
chkconfig --list mysqld</p>

<h1>2 - 5 should be on</h1>

<p>mysqld 0:off 1:off 2:on 3:on 4:on 5:on 6:off
```</p>

<p>startup MySQL server</p>

<p><code>
/etc/rc.d/init.d/mysqld start
</code></p>

<p>change password</p>

<p><code>
mysqladmin -u root password 'Your Password'
</code></p>

<h3>Apache 2</h3>

<p>install Apache server</p>

<p><code>
yum -y install httpd
</code></p>

<h3>PHP 5</h3>

<p>install PHP</p>

<p><code>
yum -y install php php-mbstring php-mysql php-gd php-pear
</code></p>

<p>setup php.ini</p>

<p><code>
date.timezone = "Asia/Taipei"
</code></p>

<h3>Apache Config</h3>

<p>set Apache as daemon</p>

<p><code>
chkconfig httpd on
</code></p>

<p>check config</p>

<p>```
chkconfig --list httpd</p>

<h1>2 - 5 should be on</h1>

<p>httpd  0:off 1:off 2:on 3:on 4:on 5:on 6:off
```</p>

<p>startup httpd server</p>

<p><code>
/etc/rc.d/init.d/httpd start
</code></p>

<h2>verify installed</h2>

<p>create new php file in document root</p>

<p><code>
vi /var/www/html/index.php
</code></p>

<p>```</p>

<pre><code>&lt;?php 
phpinfo();
?&gt;
</code></pre>

<p>```</p>

<p>open by lynx borwser</p>

<p><code>
lynx http://localhost
</code></p>

<p>you should check
<a href="http://wiki.kent-chiu.com/doku.php?id=ubuntu:lamp" title="ubuntu:lamp">this</a>
article to config LAMP server</p>

<p>如果無法從linux外存取web，可能會firewall的關係，在command
line下執行<code>setup</code>可以關掉firewall</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP Web Server Instruction]]></title>
    <link href="http://blog.kent-chiu.com/blog/2011/10/17/install_web_server/"/>
    <updated>2011-10-17T00:00:00+08:00</updated>
    <id>http://blog.kent-chiu.com/blog/2011/10/17/install_web_server</id>
    <content type="html"><![CDATA[<h2>For Windows Platform</h2>

<h3>All in one package</h3>

<ul>
<li><p><a href="http://vertrigo.sourceforge.net/" title="http://vertrigo.sourceforge.net/">vertrigo</a></p>

<ol>
<li>apache server</li>
<li>PHP</li>
<li>MySQL</li>
<li>PHPmyAdmin</li>
<li>SQLite</li>
<li>SQLiteManager</li>
<li>zend optimizer</li>
<li>smarty</li>
</ol>
</li>
<li><p><a href="http://www.wampserver.com/" title="http://www.wampserver.com/">WAMP</a></p>

<ol>
<li>apache server</li>
<li>PHP</li>
<li>MySQL</li>
<li>PHPmyAdmin</li>
<li>SQLite</li>
<li>SQLiteManager</li>
<li>zend optimizer</li>
<li>smarty</li>
</ol>
</li>
</ul>


<h2>For Ubuntu(Linux) Platform</h2>

<p>apt-get will give you the whole world.!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[High Performance MySQL study notes]]></title>
    <link href="http://blog.kent-chiu.com/blog/2011/10/17/high_performance_mysql_study_notes/"/>
    <updated>2011-10-17T00:00:00+08:00</updated>
    <id>http://blog.kent-chiu.com/blog/2011/10/17/high_performance_mysql_study_notes</id>
    <content type="html"><![CDATA[<h2>Lock Control</h2>

<h3>Table Locks</h3>

<ul>
<li>最基本的鎖定略策略</li>
<li>成本最低</li>
<li>效能較佳</li>
</ul>


<h4>動作方式</h4>

<p>When a client wishes to write to a table (insert, delete,update, etc.),
it acquires a write lock. This keeps all other read and write operations
at bay. When nobody is writing, readers can obtain read locks, which
don’t conflictwith other read locks.</p>

<p>Table locks have variations for good performance in specific situations.
For example, READ LOCAL table locks allow some types of concurrent write
operations. <strong>Write locks also have a higher priority than read locks</strong>,
so a request for a write lock will advance to the front of the lock
queue even if readers are already in the queue (write locks can advance
past read locks in the queue, but read locks cannot advance past write
locks).</p>

<h3>Row Locks</h3>

<ul>
<li>最佳的concurrency control</li>
<li>花費較高的resources</li>
<li>需使用InnoDB and Falcon storage engines</li>
</ul>


<h3>Implicit and explicit locking</h3>

<p>InnoDB會依isolation level自動處理鎖定，但是也可以用SQL Commands來控制</p>

<p>```</p>

<pre><code># method 1
SELECT ... LOCK IN SHARE MODE
# method 2
SELECT ... FOR UPDATE
</code></pre>

<p>```</p>

<p>雖然MySQL有提供lock table的指令，但能不用就不要用，不論使用何種 storage
engine，除了在transaction中而且autocommit是disabled的，不然不要使用lock
table的指令，因為lock跟transaction的交互是相當的複雜的</p>

<h2>Isolation Levels</h2>

<ul>
<li><a href="#read_uncommitted" title="mysql:high_performance_mysql_study_notes ↵">READ
UNCOMMITTED</a></li>
<li><a href="#read_committed" title="mysql:high_performance_mysql_study_notes ↵">READ
COMMITTED</a></li>
<li><a href="#repeatable_read" title="mysql:high_performance_mysql_study_notes ↵">REPEATABLE
READ</a></li>
<li><a href="#serializable" title="mysql:high_performance_mysql_study_notes ↵">SERIALIZABLE</a></li>
</ul>


<p>nonrepeatable read : running the same statement twice and see different
data.</p>

<p>phantom reads : when you select some range of rows, another transaction
inserts a new row into the range, and then you select the same range
<strong>again</strong>; <strong>you will then see the new “phantom” row.</strong></p>

<h4>READ UNCOMMITTED</h4>

<ul>
<li>transactions can view the results of uncommitted transactions.</li>
<li>a.k.a dirty read</li>
<li>實務應用上用少使用</li>
<li>效能也並末比其他的level好很多</li>
</ul>


<h4>READ COMMITTED</h4>

<ul>
<li>許多資料庫系統預設的level<strong>(但不包含MySQL)</strong></li>
<li>transaction只會看到其他transactions已經commited的資料</li>
</ul>


<h4>REPEATABLE READ</h4>

<ul>
<li>MySQL預設的level</li>
<li>解決<a href="#read_uncommitted" title="mysql:high_performance_mysql_study_notes ↵">READ
UNCOMMITTED</a>的問題</li>
<li>但還是有可能發會phantom reads的問題</li>
<li>InnoDB and Falcon solve the phantom read problem with multiversion
concurrency control.</li>
</ul>


<h4>SERIALIZABLE</h4>

<ul>
<li>解決phantom read problem問題</li>
<li>容易發生timeout跟鎖定衝突等問題</li>
<li>實務上也比較少用</li>
<li>等高等級的Isolation Levels(最耗資源)</li>
</ul>


<h3>ANSI SQL isolation levels</h3>

<p>Isolation level</p>

<p>Dirty reads possible</p>

<p>Nonrepeatable reads possible</p>

<p>Phantom reads possible</p>

<p>Locking reads READ</p>

<p>UNCOMMITTED</p>

<p>Yes</p>

<p>Yes</p>

<p>Yes</p>

<p>No</p>

<p>READ COMMITTED</p>

<p>No</p>

<p>Yes</p>

<p>Yes</p>

<p>No</p>

<p>REPEATABLE READ</p>

<p>No</p>

<p>No</p>

<p>Yes</p>

<p>No</p>

<p>SERIALIZABLE</p>

<p>No</p>

<p>No</p>

<p>No</p>

<p>Yes</p>

<h2>Uncategory</h2>

<h4>Transactional Tables</h4>

<ol>
<li>InnoDB</li>
<li>Falcon</li>
<li>PBXT</li>
</ol>


<h4>Non-Transactional Tables</h4>

<ol>
<li>MyISAM table</li>
<li>Memory table</li>
</ol>


<p>non-transactional
table還是可以在transaction中使用，但rollback時無法正常回復</p>

<h4>Storage Engines</h4>

<ol>
<li>InnoDB</li>
<li>NDB Cluster</li>
<li>Falcon</li>
</ol>

]]></content>
  </entry>
  
</feed>
