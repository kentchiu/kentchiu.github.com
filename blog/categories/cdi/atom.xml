<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: cdi | Kent's Blog]]></title>
  <link href="http://blog.kent-chiu.com/blog/categories/cdi/atom.xml" rel="self"/>
  <link href="http://blog.kent-chiu.com/"/>
  <updated>2013-09-24T13:16:34+08:00</updated>
  <id>http://blog.kent-chiu.com/</id>
  <author>
    <name><![CDATA[Kent]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Weld 101]]></title>
    <link href="http://blog.kent-chiu.com/blog/2012/03/20/weld_101/"/>
    <updated>2012-03-20T00:00:00+08:00</updated>
    <id>http://blog.kent-chiu.com/blog/2012/03/20/weld_101</id>
    <content type="html"><![CDATA[<ul>
<li>@Model = @Named + @RequestScoped</li>
<li>The @Named annotation just makes it possible to reference the bean
from the EL</li>
<li>it isn't necessary to create a getter or setter method to inject one
bean into another. CDI can access an injected field directly (even
if it's private!)</li>
<li>Bean could be invoked by Unified EL.</li>
<li>A bean type is a user-defined class or interface.</li>
<li>Bean types may be restricted to an explicit set by annotating the
bean with the @Typed annotation</li>
<li>If an injection point does not explicitly specify a qualifier, it
has the default qualifier, @Default.</li>
<li>Don't assign a scope other than @Dependent to an entity class</li>
<li>@Produces used in factory method.

<ul>
<li>@Alternative usually used in testing and must be enabled by config</li>
</ul>
</li>
<li></li>
</ul>


<h1>Fixing unsatisfied and ambiguous dependencies</h1>

<h4>To fix an unsatisfied dependency, either:</h4>

<ul>
<li>create a bean which implements the bean type and has all the
qualifier types of the injection point,</li>
<li>make sure that the bean you already have is in the classpath of the
module with the injection point, or</li>
<li>explicitly enable an @Alternative bean that implements the bean type
and has the appropriate qualifier types, using beans.xml.</li>
</ul>


<h4>To fix an ambiguous dependency, either:</h4>

<ul>
<li>introduce a qualifier to distinguish between the two implementations
of the bean type,</li>
<li>disable one of the beans by annotating it @Alternative,</li>
<li>move one of the implementations to a module that is not in the
classpath of the module with the injection point, or</li>
<li>disable one of two @Alternative beans that are trying to occupy the
same space, using beans.xml.</li>
</ul>


<p>[java</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Contexts and Dependency Injection 101]]></title>
    <link href="http://blog.kent-chiu.com/blog/2012/03/20/cdi_101/"/>
    <updated>2012-03-20T00:00:00+08:00</updated>
    <id>http://blog.kent-chiu.com/blog/2012/03/20/cdi_101</id>
    <content type="html"><![CDATA[<p>除了一般DI的功能外，CDI多了Context
Sensitive，Context在HTTP中，指的是Request, Response, Session,
Application, …這些scopes. 當然還有搭配這些scope用的decorators,
interceptors。
使用CDI最重要的事，莫過於決定物件要binding的scopes，針對這些scopes的使用時機如下：</p>

<ul>
<li><a href="#dependent" title="java:cdi_101 ↵">Dependent</a></li>
<li><a href="#applicationscoped" title="java:cdi_101 ↵">ApplicationScoped</a></li>
<li><a href="#requestscoped" title="java:cdi_101 ↵">RequestScoped</a></li>
<li><a href="#sessionscoped" title="java:cdi_101 ↵">SessionScoped</a></li>
<li><a href="#conversationscoped" title="java:cdi_101 ↵">ConversationScoped</a></li>
<li><a href="#stateless" title="java:cdi_101 ↵">Stateless</a> ^<a href="#fn__1">1)</a>^</li>
</ul>


<h3>Dependent</h3>

<p><strong>預設</strong>的scope，生命週期與被@injected的物件相同。</p>

<h3>ApplicationScoped</h3>

<p>跟著application server啟動而啟動，停止而停止的。</p>

<p>適用於比較特別的services(stateful), helper classes, 或sharing
data(全局的權限或計數器)。</p>

<p>read only的service也很適合，因為不需要考慮thread safe的問題</p>

<h3>RequestScoped</h3>

<p>http request的scope。</p>

<p>適用於做http request溝通，常被當作網頁與程式邏輯間的DTO使用。</p>

<h3>SessionScoped</h3>

<p>http session的scope，隨sesion的建立而開始，session消滅而結束。</p>

<p>適用需要跟著使用者跑的資料或服務(像認證資訊或權限資訊)。</p>

<h3>ConversationScoped</h3>

<p>沒用過，不清楚，文件上是說常通比session短，但比request長的一個scope.</p>

<h3>Stateless</h3>

<p>這個應該不算是一個scope，但一般的service methods
(objects)應該都屬stateless的。</p>

<h1>TBD</h1>

<ol>
<li>EL操作webbean方式</li>
<li>單元測試</li>
<li>CDI與JPA</li>
<li>decorators</li>
<li>interceptors</li>
<li>events</li>
<li>@Producers</li>
<li>@Disposers</li>
</ol>


<p>[java</p>

<p>^<a href="#fnt__1">1)</a>^ 並沒有這種scope</p>
]]></content>
  </entry>
  
</feed>
